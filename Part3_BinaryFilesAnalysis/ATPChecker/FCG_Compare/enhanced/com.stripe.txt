FINALIZE edge: null in <java.lang.Object: void <init>()> ==> <java.lang.Object: void finalize()>
CLINIT edge: r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.System: void <clinit>()>
STATIC edge: r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
CLINIT edge: $r24 = <java.lang.System: java.io.PrintStream out> in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Charge: com.stripe.model.Charge create(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Charge: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/Charge;") in <com.stripe.model.Charge: com.stripe.model.Charge create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Charge: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Charge;") in <com.stripe.model.Charge: com.stripe.model.Charge create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Charge: com.stripe.model.Charge retrieve(java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Charge: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r2, null, class "Lcom/stripe/model/Charge;") in <com.stripe.model.Charge: com.stripe.model.Charge retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r2 = staticinvoke <com.stripe.model.Charge: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Charge;", r0) in <com.stripe.model.Charge: com.stripe.model.Charge retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Charge: com.stripe.model.ChargeCollection all(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Charge: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/ChargeCollection;") in <com.stripe.model.Charge: com.stripe.model.ChargeCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Charge: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Charge;") in <com.stripe.model.Charge: com.stripe.model.ChargeCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Charge: com.stripe.model.Charge refund(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r7 = staticinvoke <com.stripe.model.Charge: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r2, $r5, r6, class "Lcom/stripe/model/Charge;") in <com.stripe.model.Charge: com.stripe.model.Charge refund(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/refund", $r0) in <com.stripe.model.Charge: com.stripe.model.Charge refund(java.util.Map)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r4 = staticinvoke <com.stripe.model.Charge: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Charge;", $r3) in <com.stripe.model.Charge: com.stripe.model.Charge refund(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/refund", $r0) in <com.stripe.model.Charge: com.stripe.model.Charge refund(java.util.Map)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] $VALUES> in <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/stripe/net/APIResource$RequestMethod;", r0) in <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod valueOf(java.lang.String)> ==> <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
CLINIT edge: $r6 = <com.stripe.util.Base64: char[] CA> in <com.stripe.util.Base64: char[] encodeToChar(byte[],boolean)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r2 = <com.stripe.util.Base64: char[] CA> in <com.stripe.util.Base64: char[] encodeToChar(byte[],boolean)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r4 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(char[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r2 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(char[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r3 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(char[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r8 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(char[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r2 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(char[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r3 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(char[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r7 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(char[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r6 = <com.stripe.util.Base64: char[] CA> in <com.stripe.util.Base64: byte[] encodeToByte(byte[],boolean)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r2 = <com.stripe.util.Base64: char[] CA> in <com.stripe.util.Base64: byte[] encodeToByte(byte[],boolean)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r4 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(byte[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r2 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(byte[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r3 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(byte[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r8 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(byte[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r2 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(byte[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r3 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(byte[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r7 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(byte[])> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r0 = new java.lang.String in <com.stripe.util.Base64: java.lang.String encodeToString(byte[],boolean)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.stripe.util.Base64: char[] encodeToChar(byte[],boolean)>(r1, z0) in <com.stripe.util.Base64: java.lang.String encodeToString(byte[],boolean)> ==> <com.stripe.util.Base64: char[] encodeToChar(byte[],boolean)>
CLINIT edge: $r2 = staticinvoke <com.stripe.util.Base64: char[] encodeToChar(byte[],boolean)>(r1, z0) in <com.stripe.util.Base64: java.lang.String encodeToString(byte[],boolean)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r4 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(java.lang.String)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r2 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(java.lang.String)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r3 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decode(java.lang.String)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r8 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r2 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r3 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r7 = <com.stripe.util.Base64: int[] IA> in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r26 = <com.stripe.net.APIResource: com.google.gson.Gson gson> in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: $r19 = <com.stripe.net.APIResource: com.google.gson.Gson gson> in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: $r16 = <com.stripe.model.EventDataDeserializer: java.util.Map objectMap> in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <com.stripe.model.EventDataDeserializer: void <clinit>()>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Coupon: com.stripe.model.Coupon create(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Coupon: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/Coupon;") in <com.stripe.model.Coupon: com.stripe.model.Coupon create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Coupon: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Coupon;") in <com.stripe.model.Coupon: com.stripe.model.Coupon create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Coupon: com.stripe.model.Coupon retrieve(java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Coupon: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r2, null, class "Lcom/stripe/model/Coupon;") in <com.stripe.model.Coupon: com.stripe.model.Coupon retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r2 = staticinvoke <com.stripe.model.Coupon: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Coupon;", r0) in <com.stripe.model.Coupon: com.stripe.model.Coupon retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Coupon: com.stripe.model.CouponCollection all(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Coupon: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/CouponCollection;") in <com.stripe.model.Coupon: com.stripe.model.CouponCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Coupon: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Coupon;") in <com.stripe.model.Coupon: com.stripe.model.CouponCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod DELETE> in <com.stripe.model.Coupon: com.stripe.model.DeletedCoupon delete()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.stripe.model.Coupon: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r2, $r3, null, class "Lcom/stripe/model/DeletedCoupon;") in <com.stripe.model.Coupon: com.stripe.model.DeletedCoupon delete()> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Coupon: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Coupon;", $r1) in <com.stripe.model.Coupon: com.stripe.model.DeletedCoupon delete()> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Customer: com.stripe.model.Customer create(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Customer: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/Customer;") in <com.stripe.model.Customer: com.stripe.model.Customer create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Customer: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Customer;") in <com.stripe.model.Customer: com.stripe.model.Customer create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Customer: com.stripe.model.Customer retrieve(java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Customer: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r2, null, class "Lcom/stripe/model/Customer;") in <com.stripe.model.Customer: com.stripe.model.Customer retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r2 = staticinvoke <com.stripe.model.Customer: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Customer;", r0) in <com.stripe.model.Customer: com.stripe.model.Customer retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Customer: com.stripe.model.CustomerCollection all(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Customer: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/CustomerCollection;") in <com.stripe.model.Customer: com.stripe.model.CustomerCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Customer: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Customer;") in <com.stripe.model.Customer: com.stripe.model.CustomerCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Customer: com.stripe.model.Customer update(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.stripe.model.Customer: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r2, $r3, r4, class "Lcom/stripe/model/Customer;") in <com.stripe.model.Customer: com.stripe.model.Customer update(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Customer: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Customer;", $r1) in <com.stripe.model.Customer: com.stripe.model.Customer update(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod DELETE> in <com.stripe.model.Customer: com.stripe.model.DeletedCustomer delete()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.stripe.model.Customer: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r2, $r3, null, class "Lcom/stripe/model/DeletedCustomer;") in <com.stripe.model.Customer: com.stripe.model.DeletedCustomer delete()> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Customer: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Customer;", $r1) in <com.stripe.model.Customer: com.stripe.model.DeletedCustomer delete()> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r3 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Customer: com.stripe.model.Subscription updateSubscription(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r7 = staticinvoke <com.stripe.model.Customer: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r3, $r5, r6, class "Lcom/stripe/model/Subscription;") in <com.stripe.model.Customer: com.stripe.model.Subscription updateSubscription(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/subscription", $r0) in <com.stripe.model.Customer: com.stripe.model.Subscription updateSubscription(java.util.Map)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r4 = staticinvoke <com.stripe.model.Customer: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Customer;", $r2) in <com.stripe.model.Customer: com.stripe.model.Subscription updateSubscription(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/subscription", $r0) in <com.stripe.model.Customer: com.stripe.model.Subscription updateSubscription(java.util.Map)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r3 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod DELETE> in <com.stripe.model.Customer: com.stripe.model.Subscription cancelSubscription(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r7 = staticinvoke <com.stripe.model.Customer: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r3, $r5, r6, class "Lcom/stripe/model/Subscription;") in <com.stripe.model.Customer: com.stripe.model.Subscription cancelSubscription(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/subscription", $r0) in <com.stripe.model.Customer: com.stripe.model.Subscription cancelSubscription(java.util.Map)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r4 = staticinvoke <com.stripe.model.Customer: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Customer;", $r2) in <com.stripe.model.Customer: com.stripe.model.Subscription cancelSubscription(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/subscription", $r0) in <com.stripe.model.Customer: com.stripe.model.Subscription cancelSubscription(java.util.Map)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Plan: com.stripe.model.Plan create(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/Plan;") in <com.stripe.model.Plan: com.stripe.model.Plan create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Plan: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Plan;") in <com.stripe.model.Plan: com.stripe.model.Plan create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Plan: com.stripe.model.Plan retrieve(java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r2, null, class "Lcom/stripe/model/Plan;") in <com.stripe.model.Plan: com.stripe.model.Plan retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r2 = staticinvoke <com.stripe.model.Plan: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Plan;", r0) in <com.stripe.model.Plan: com.stripe.model.Plan retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Plan: com.stripe.model.Plan update(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r2, $r3, r4, class "Lcom/stripe/model/Plan;") in <com.stripe.model.Plan: com.stripe.model.Plan update(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Plan: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Plan;", $r1) in <com.stripe.model.Plan: com.stripe.model.Plan update(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Plan: com.stripe.model.PlanCollection all(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/PlanCollection;") in <com.stripe.model.Plan: com.stripe.model.PlanCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Plan: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Plan;") in <com.stripe.model.Plan: com.stripe.model.PlanCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod DELETE> in <com.stripe.model.Plan: com.stripe.model.DeletedPlan delete()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.stripe.model.Plan: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r2, $r3, null, class "Lcom/stripe/model/DeletedPlan;") in <com.stripe.model.Plan: com.stripe.model.DeletedPlan delete()> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Plan: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Plan;", $r1) in <com.stripe.model.Plan: com.stripe.model.DeletedPlan delete()> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Event: com.stripe.model.Event retrieve(java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Event: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r2, null, class "Lcom/stripe/model/Event;") in <com.stripe.model.Event: com.stripe.model.Event retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r2 = staticinvoke <com.stripe.model.Event: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Event;", r0) in <com.stripe.model.Event: com.stripe.model.Event retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Event: com.stripe.model.EventCollection all(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Event: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/EventCollection;") in <com.stripe.model.Event: com.stripe.model.EventCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Event: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Event;") in <com.stripe.model.Event: com.stripe.model.EventCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Invoice: com.stripe.model.Invoice retrieve(java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Invoice: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r2, null, class "Lcom/stripe/model/Invoice;") in <com.stripe.model.Invoice: com.stripe.model.Invoice retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r2 = staticinvoke <com.stripe.model.Invoice: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Invoice;", r0) in <com.stripe.model.Invoice: com.stripe.model.Invoice retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Invoice: com.stripe.model.InvoiceCollection all(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Invoice: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/InvoiceCollection;") in <com.stripe.model.Invoice: com.stripe.model.InvoiceCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Invoice: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Invoice;") in <com.stripe.model.Invoice: com.stripe.model.InvoiceCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Invoice: com.stripe.model.Invoice upcoming(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.stripe.model.Invoice: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r3, r4, class "Lcom/stripe/model/Invoice;") in <com.stripe.model.Invoice: com.stripe.model.Invoice upcoming(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/upcoming", $r0) in <com.stripe.model.Invoice: com.stripe.model.Invoice upcoming(java.util.Map)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r2 = staticinvoke <com.stripe.model.Invoice: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Invoice;") in <com.stripe.model.Invoice: com.stripe.model.Invoice upcoming(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/upcoming", $r0) in <com.stripe.model.Invoice: com.stripe.model.Invoice upcoming(java.util.Map)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem create(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/InvoiceItem;") in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/InvoiceItem;") in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem retrieve(java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r2, null, class "Lcom/stripe/model/InvoiceItem;") in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r2 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/InvoiceItem;", r0) in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItemCollection all(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/InvoiceItemCollection;") in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItemCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/InvoiceItem;") in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItemCollection all(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem update(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r2, $r3, r4, class "Lcom/stripe/model/InvoiceItem;") in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem update(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/InvoiceItem;", $r1) in <com.stripe.model.InvoiceItem: com.stripe.model.InvoiceItem update(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r2 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod DELETE> in <com.stripe.model.InvoiceItem: com.stripe.model.DeletedInvoiceItem delete()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r2, $r3, null, class "Lcom/stripe/model/DeletedInvoiceItem;") in <com.stripe.model.InvoiceItem: com.stripe.model.DeletedInvoiceItem delete()> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <com.stripe.model.InvoiceItem: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/InvoiceItem;", $r1) in <com.stripe.model.InvoiceItem: com.stripe.model.DeletedInvoiceItem delete()> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.model.Token: com.stripe.model.Token create(java.util.Map)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Token: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r0, $r1, r2, class "Lcom/stripe/model/Token;") in <com.stripe.model.Token: com.stripe.model.Token create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r1 = staticinvoke <com.stripe.model.Token: java.lang.String classURL(java.lang.Class)>(class "Lcom/stripe/model/Token;") in <com.stripe.model.Token: com.stripe.model.Token create(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.model.Token: com.stripe.model.Token retrieve(java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.model.Token: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>($r1, $r2, null, class "Lcom/stripe/model/Token;") in <com.stripe.model.Token: com.stripe.model.Token retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)>
STATIC edge: $r2 = staticinvoke <com.stripe.model.Token: java.lang.String instanceURL(java.lang.Class,java.lang.String)>(class "Lcom/stripe/model/Token;", r0) in <com.stripe.model.Token: com.stripe.model.Token retrieve(java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)>
CLINIT edge: $r0 = new com.stripe.net.APIResource$RequestMethod in <com.stripe.net.APIResource$RequestMethod: void <clinit>()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
CLINIT edge: r4 = staticinvoke <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)>(r3) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <com.stripe.net.APIResource: void <clinit>()>
STATIC edge: staticinvoke <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)>(r15, i0) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)>
STATIC edge: r12 = staticinvoke <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)>(r5, r6, r4) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)>
STATIC edge: r14 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("com.google.appengine.runtime.environment", null) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
STATIC edge: r12 = staticinvoke <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)>(r5, r6, r4) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)>
STATIC edge: r4 = staticinvoke <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)>(r3) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)>
CLINIT edge: r12 = staticinvoke <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)>(r5, r6, r4) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: r14 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("com.google.appengine.runtime.environment", null) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <com.stripe.net.APIResource: java.lang.String className(java.lang.Class)>(r1) in <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)> ==> <com.stripe.net.APIResource: void <clinit>()>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%ss", $r0) in <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r2 = staticinvoke <com.stripe.net.APIResource: java.lang.String className(java.lang.Class)>(r1) in <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)> ==> <com.stripe.net.APIResource: java.lang.String className(java.lang.Class)>
CLINIT edge: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%ss", $r0) in <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>(r1) in <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s", $r0) in <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r2 = staticinvoke <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>(r1) in <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String classURL(java.lang.Class)>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s", $r0) in <com.stripe.net.APIResource: java.lang.String instanceURL(java.lang.Class,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = null in <java.lang.String: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <com.stripe.util.Base64: char[] CA> = $r1 in <com.stripe.util.Base64: void <clinit>()> ==> <com.stripe.util.Base64: void <clinit>()>
STATIC edge: staticinvoke <java.util.Arrays: void fill(int[],int)>($r3, -1) in <com.stripe.util.Base64: void <clinit>()> ==> <java.util.Arrays: void fill(int[],int)>
CLINIT edge: $r3 = new com.stripe.model.EventDataDeserializer in <com.stripe.net.APIResource: void <clinit>()> ==> <com.stripe.model.EventDataDeserializer: void <clinit>()>
CLINIT edge: <com.stripe.net.APIResource: com.google.gson.Gson gson> = $r5 in <com.stripe.net.APIResource: void <clinit>()> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: <com.stripe.model.EventDataDeserializer: java.util.Map objectMap> = $r0 in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <com.stripe.model.EventDataDeserializer: void <clinit>()>
CLINIT edge: $r1 = <com.stripe.net.APIResource: com.google.gson.Gson gson> in <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)> ==> <com.stripe.net.APIResource: void <clinit>()>
STATIC edge: r4 = staticinvoke <com.stripe.net.APIResource$ErrorContainer: com.stripe.net.APIResource$Error access$000(com.stripe.net.APIResource$ErrorContainer)>($r3) in <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)> ==> <com.stripe.net.APIResource$ErrorContainer: com.stripe.net.APIResource$Error access$000(com.stripe.net.APIResource$ErrorContainer)>
CLINIT edge: $r1 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod GET> in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: r93 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.URLFetchServiceFactory") in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: r91 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.HTTPHeader") in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r21 = staticinvoke <com.stripe.net.APIResource: java.util.Map getHeaders()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: java.util.Map getHeaders()>
STATIC edge: r15 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.HTTPRequest") in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: r88 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.FetchOptions") in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.FetchOptions$Builder") in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.google.appengine.api.urlfetch.HTTPMethod") in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: r85 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?%s", $r59) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
CLINIT edge: $r35 = new java.lang.String in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r21 = staticinvoke <com.stripe.net.APIResource: java.util.Map getHeaders()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: $r20 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
CLINIT edge: $r14 = new java.lang.Double in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Double: void <clinit>()>
CLINIT edge: $r81 = <java.lang.System: java.io.PrintStream err> in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.System: void <clinit>()>
CLINIT edge: r85 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?%s", $r59) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r1 = <com.stripe.net.APIResource$1: int[] $SwitchMap$com$stripe$net$APIResource$RequestMethod> in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource$1: void <clinit>()>
STATIC edge: $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not connect to Stripe (%s). Please check your internet connection and try again. If this problem persists,you should check Stripe\'s service status at https://twitter.com/stripestatus, or let us know at support@stripe.com.", $r14) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: r17 = staticinvoke <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)>($r3) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)>
STATIC edge: r17 = staticinvoke <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)>($r5) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)>
STATIC edge: $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unrecognized HTTP method %s. This indicates a bug in the Stripe bindings. Please contact support@stripe.com for assistance.", $r8) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: r16 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createDeleteConnection(java.lang.String)>(r2) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createDeleteConnection(java.lang.String)>
STATIC edge: r16 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)>(r2, r6) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)>
STATIC edge: r16 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String,java.lang.String)>(r2, r6) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String,java.lang.String)>
CLINIT edge: $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not connect to Stripe (%s). Please check your internet connection and try again. If this problem persists,you should check Stripe\'s service status at https://twitter.com/stripestatus, or let us know at support@stripe.com.", $r14) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unrecognized HTTP method %s. This indicates a bug in the Stripe bindings. Please contact support@stripe.com for assistance.", $r8) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: r16 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createDeleteConnection(java.lang.String)>(r2) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: r16 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)>(r2, r6) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: r16 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String,java.lang.String)>(r2, r6) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: r1 = staticinvoke <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)>(r0) in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <com.stripe.net.APIResource: void <clinit>()>
STATIC edge: $r15 = staticinvoke <com.stripe.net.APIResource: java.lang.String urlEncodePair(java.lang.String,java.lang.String)>($r12, $r14) in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <com.stripe.net.APIResource: java.lang.String urlEncodePair(java.lang.String,java.lang.String)>
STATIC edge: r1 = staticinvoke <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)>(r0) in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Stripe/v1 JavaBindings/%s", $r3) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r23 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r22) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Basic %s:", $r6) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r8 = staticinvoke <com.stripe.net.APIResource: java.lang.String base64(java.lang.String)>($r7) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <com.stripe.net.APIResource: java.lang.String base64(java.lang.String)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Stripe/v1 JavaBindings/%s", $r3) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
CLINIT edge: $r23 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r22) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r8 = staticinvoke <com.stripe.net.APIResource: java.lang.String base64(java.lang.String)>($r7) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: <java.lang.Double: java.lang.Class TYPE> = null in <java.lang.Double: void <clinit>()> ==> <java.lang.Double: void <clinit>()>
CLINIT edge: $r0 = staticinvoke <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()>() in <com.stripe.net.APIResource$1: void <clinit>()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
STATIC edge: $r0 = staticinvoke <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()>() in <com.stripe.net.APIResource$1: void <clinit>()> ==> <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()>
CLINIT edge: $r6 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod DELETE> in <com.stripe.net.APIResource$1: void <clinit>()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
CLINIT edge: $r7 = <com.stripe.net.APIResource$1: int[] $SwitchMap$com$stripe$net$APIResource$RequestMethod> in <com.stripe.net.APIResource$1: void <clinit>()> ==> <com.stripe.net.APIResource$1: void <clinit>()>
CLINIT edge: $r4 = <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod POST> in <com.stripe.net.APIResource$1: void <clinit>()> ==> <com.stripe.net.APIResource$RequestMethod: void <clinit>()>
CLINIT edge: $r5 = <com.stripe.net.APIResource$1: int[] $SwitchMap$com$stripe$net$APIResource$RequestMethod> in <com.stripe.net.APIResource$1: void <clinit>()> ==> <com.stripe.net.APIResource$1: void <clinit>()>
CLINIT edge: <com.stripe.net.APIResource$1: int[] $SwitchMap$com$stripe$net$APIResource$RequestMethod> = $r1 in <com.stripe.net.APIResource$1: void <clinit>()> ==> <com.stripe.net.APIResource$1: void <clinit>()>
CLINIT edge: r1 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>(r0) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createDeleteConnection(java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
STATIC edge: r1 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>(r0) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createDeleteConnection(java.lang.String)> ==> <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>
CLINIT edge: r1 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>(r0) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("application/x-www-form-urlencoded;charset=%s", $r2) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: r1 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>(r0) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>
CLINIT edge: $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("application/x-www-form-urlencoded;charset=%s", $r2) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?%s", $r0) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: r4 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>(r3) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>
STATIC edge: r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?%s", $r0) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
CLINIT edge: r4 = staticinvoke <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)>(r3) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createGetConnection(java.lang.String,java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s=%s", $r0) in <com.stripe.net.APIResource: java.lang.String urlEncodePair(java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s=%s", $r0) in <com.stripe.net.APIResource: java.lang.String urlEncodePair(java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r3, "UTF-8") in <com.stripe.net.APIResource: java.lang.String urlEncodePair(java.lang.String,java.lang.String)> ==> <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r1, "UTF-8") in <com.stripe.net.APIResource: java.lang.String urlEncodePair(java.lang.String,java.lang.String)> ==> <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
CLINIT edge: $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s[%s]", $r20) in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r17 = staticinvoke <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)>($r12) in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)>
STATIC edge: $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s[%s]", $r20) in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
CLINIT edge: $r17 = staticinvoke <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)>($r12) in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <com.stripe.net.APIResource: void <clinit>()>
CLINIT edge: $r0 = new java.lang.String in <com.stripe.net.APIResource: java.lang.String base64(java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.stripe.util.Base64: java.lang.String encodeToString(byte[],boolean)>($r2, 0) in <com.stripe.net.APIResource: java.lang.String base64(java.lang.String)> ==> <com.stripe.util.Base64: java.lang.String encodeToString(byte[],boolean)>
CLINIT edge: $r3 = staticinvoke <com.stripe.util.Base64: java.lang.String encodeToString(byte[],boolean)>($r2, 0) in <com.stripe.net.APIResource: java.lang.String base64(java.lang.String)> ==> <com.stripe.util.Base64: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <com.stripe.net.APIResource: java.util.Map getHeaders()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)> ==> <com.stripe.net.APIResource: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.stripe.net.APIResource: java.util.Map getHeaders()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)> ==> <com.stripe.net.APIResource: java.util.Map getHeaders()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Throwable: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Throwable: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Throwable: void <init>(java.lang.Throwable)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void <init>(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.Throwable fillInStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.String getMessage()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.String getLocalizedMessage()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void printStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void printStackTrace(java.io.PrintStream)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void printStackTrace(java.io.PrintWriter)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: java.lang.Throwable getCause()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void wait()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void wait(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[])> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],int,int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],int,int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],int,int,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],int,int,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],java.nio.charset.Charset)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],java.nio.charset.Charset)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(char[])> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(char[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(char[],int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(java.lang.StringBuffer)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(java.lang.StringBuffer)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(int[],int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(int[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(java.lang.StringBuilder)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(java.lang.StringBuilder)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int compareToIgnoreCase(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String concat(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String copyValueOf(char[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String copyValueOf(char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean endsWith(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void getBytes(int,int,byte[],int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: byte[] getBytes()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: byte[] getBytes(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: byte[] getBytes(java.nio.charset.Charset)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void getChars(int,int,char[],int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int indexOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int indexOf(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int indexOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int indexOf(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int lastIndexOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int lastIndexOf(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int lastIndexOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int lastIndexOf(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean regionMatches(int,java.lang.String,int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replace(char,char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean startsWith(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean startsWith(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String substring(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String substring(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: char[] toCharArray()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toLowerCase()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toLowerCase(java.util.Locale)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toUpperCase()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toUpperCase(java.util.Locale)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String trim()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(char[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean contentEquals(java.lang.StringBuffer)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean contentEquals(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean matches(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String[] split(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String[] split(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.CharSequence subSequence(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int codePointAt(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int codePointBefore(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int codePointCount(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean contains(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int offsetByCodePoints(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.String: int compareTo(java.lang.String)>($r2) in <java.lang.String: int compareTo(java.lang.Object)> ==> <java.lang.String: int compareTo(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>()> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.Throwable)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class forName(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class[] getClasses()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getCanonicalName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.ClassLoader getClassLoader()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Constructor[] getConstructors()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class[] getDeclaredClasses()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Object[] getEnumConstants()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Field[] getFields()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Type getGenericSuperclass()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method[] getMethods()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: int getModifiers()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getSimpleName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.security.ProtectionDomain getProtectionDomain()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.net.URL getResource(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Object[] getSigners()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isAnnotation()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isAnnotationPresent(java.lang.Class)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isArray()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isEnum()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isLocalClass()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isMemberClass()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isSynthetic()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Object newInstance()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Package getPackage()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class asSubclass(java.lang.Class)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Object cast(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>()> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Exception: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>(java.lang.String)> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Exception: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>(java.lang.Throwable)> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Exception: void <init>(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.AbstractStringBuilder: void <init>()>() in <java.lang.StringBuffer: void <init>()> ==> <java.lang.AbstractStringBuilder: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.AbstractStringBuilder: void <init>()>() in <java.lang.StringBuffer: void <init>(int)> ==> <java.lang.AbstractStringBuilder: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void <init>(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.AbstractStringBuilder: void <init>()>() in <java.lang.StringBuffer: void <init>(java.lang.String)> ==> <java.lang.AbstractStringBuilder: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.AbstractStringBuilder: void <init>()>() in <java.lang.StringBuffer: void <init>(java.lang.CharSequence)> ==> <java.lang.AbstractStringBuilder: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void <init>(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(char[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: char charAt(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: int codePointAt(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: int codePointBefore(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: int codePointCount(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void ensureCapacity(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void getChars(int,int,char[],int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: int indexOf(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence,int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: int lastIndexOf(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: int offsetByCodePoints(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer reverse()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void setCharAt(int,char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void setLength(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.CharSequence subSequence(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.String substring(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.String substring(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void trimToSize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $i0 = specialinvoke r0.<java.lang.AbstractStringBuilder: int lastIndexOf(java.lang.String)>(r1) in <java.lang.StringBuffer: int lastIndexOf(java.lang.String)> ==> <java.lang.AbstractStringBuilder: int lastIndexOf(java.lang.String)>
SPECIAL edge: $i0 = specialinvoke r0.<java.lang.AbstractStringBuilder: int indexOf(java.lang.String)>(r1) in <java.lang.StringBuffer: int indexOf(java.lang.String)> ==> <java.lang.AbstractStringBuilder: int indexOf(java.lang.String)>
SPECIAL edge: $i0 = specialinvoke r0.<java.lang.AbstractStringBuilder: int length()>() in <java.lang.StringBuffer: int length()> ==> <java.lang.AbstractStringBuilder: int length()>
SPECIAL edge: $i0 = specialinvoke r0.<java.lang.AbstractStringBuilder: int capacity()>() in <java.lang.StringBuffer: int capacity()> ==> <java.lang.AbstractStringBuilder: int capacity()>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>(r1, i0, i1) in <java.lang.StringBuffer: java.lang.Appendable append(java.lang.CharSequence,int,int)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>(r1) in <java.lang.StringBuffer: java.lang.Appendable append(java.lang.CharSequence)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0) in <java.lang.StringBuffer: java.lang.Appendable append(char)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.ClassNotFoundException: void <init>()> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassNotFoundException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.ClassNotFoundException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassNotFoundException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassNotFoundException: java.lang.Throwable getException()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassNotFoundException: java.lang.Throwable getCause()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.ClassFormatError: void <init>()> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassFormatError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.ClassFormatError: void <init>(java.lang.String)> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassFormatError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.LinkageError: void <init>()> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.LinkageError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.LinkageError: void <init>(java.lang.String)> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.LinkageError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: java.lang.String name()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: int ordinal()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: int compareTo(java.lang.Enum)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: java.lang.Class getDeclaringClass()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Enum: int compareTo(java.lang.Enum)>($r2) in <java.lang.Enum: int compareTo(java.lang.Object)> ==> <java.lang.Enum: int compareTo(java.lang.Enum)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Error: void <init>()> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Error: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Error: void <init>(java.lang.String)> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Error: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Error: void <init>(java.lang.Throwable)> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Error: void <init>(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Float: void <init>(float)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: void <init>(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Float: void <init>(double)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: void <init>(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Float: void <init>(java.lang.String)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: int compareTo(java.lang.Float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: byte byteValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: double doubleValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: float floatValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: int intValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: boolean isInfinite()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: boolean isInfinite(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: boolean isNaN()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: boolean isNaN(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: long longValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: float parseFloat(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: short shortValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: java.lang.String toString(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: java.lang.Float valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: int compare(float,float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: java.lang.Float valueOf(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: java.lang.String toHexString(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Float: int compareTo(java.lang.Float)>($r2) in <java.lang.Float: int compareTo(java.lang.Object)> ==> <java.lang.Float: int compareTo(java.lang.Float)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Double: void <init>(double)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: void <init>(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Double: void <init>(java.lang.String)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: int compareTo(java.lang.Double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: byte byteValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: double doubleValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: float floatValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: int intValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: boolean isInfinite()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: boolean isInfinite(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: boolean isNaN()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: boolean isNaN(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: long longValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: double parseDouble(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: short shortValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: java.lang.String toString(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: java.lang.Double valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: int compare(double,double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: java.lang.Double valueOf(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Double: java.lang.String toHexString(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Double: int compareTo(java.lang.Double)>($r2) in <java.lang.Double: int compareTo(java.lang.Object)> ==> <java.lang.Double: int compareTo(java.lang.Double)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>()> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>(java.lang.Object)> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>(boolean)> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>(char)> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>(int)> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>(long)> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>(float)> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.AssertionError: void <init>(double)> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AssertionError: void <init>(double)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Integer: void <init>(int)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: void <init>(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Integer: void <init>(java.lang.String)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: byte byteValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int compareTo(java.lang.Integer)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer decode(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: double doubleValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: float floatValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int intValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: long longValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int parseInt(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int parseInt(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: short shortValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toBinaryString(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toHexString(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toOctalString(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toString(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toString(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int highestOneBit(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int lowestOneBit(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int numberOfLeadingZeros(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int numberOfTrailingZeros(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int bitCount(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int rotateLeft(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int rotateRight(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int reverseBytes(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int reverse(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int signum(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer valueOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Integer: int compareTo(java.lang.Integer)>($r2) in <java.lang.Integer: int compareTo(java.lang.Object)> ==> <java.lang.Integer: int compareTo(java.lang.Integer)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.NullPointerException: void <init>()> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NullPointerException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.NullPointerException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NullPointerException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Character: void <init>(char)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: void <init>(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char charValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int compareTo(java.lang.Character)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: java.lang.Character valueOf(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isValidCodePoint(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isSupplementaryCodePoint(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isHighSurrogate(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isLowSurrogate(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isSurrogatePair(char,char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int charCount(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int toCodePoint(char,char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int codePointAt(java.lang.CharSequence,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int codePointAt(char[],int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int codePointAt(char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int codePointBefore(java.lang.CharSequence,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int codePointBefore(char[],int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int codePointBefore(char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int toChars(int,char[],int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char[] toChars(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int codePointCount(char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int offsetByCodePoints(java.lang.CharSequence,int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int offsetByCodePoints(char[],int,int,int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int digit(char,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int digit(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char forDigit(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int getNumericValue(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int getNumericValue(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int getType(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int getType(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: byte getDirectionality(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: byte getDirectionality(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isMirrored(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isMirrored(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isDefined(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isDefined(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isDigit(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isDigit(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isIdentifierIgnorable(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isIdentifierIgnorable(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isISOControl(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isISOControl(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isJavaIdentifierPart(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isJavaIdentifierPart(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isJavaIdentifierStart(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isJavaIdentifierStart(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isJavaLetter(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isJavaLetterOrDigit(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isLetter(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isLetter(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isLetterOrDigit(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isLetterOrDigit(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isLowerCase(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isLowerCase(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isSpace(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isSpaceChar(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isSpaceChar(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isTitleCase(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isTitleCase(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isUnicodeIdentifierPart(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isUnicodeIdentifierPart(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isUnicodeIdentifierStart(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isUnicodeIdentifierStart(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isUpperCase(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isUpperCase(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isWhitespace(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isWhitespace(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char reverseBytes(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char toLowerCase(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int toLowerCase(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: java.lang.String toString(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char toTitleCase(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int toTitleCase(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char toUpperCase(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: int toUpperCase(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Character: int compareTo(java.lang.Character)>($r2) in <java.lang.Character: int compareTo(java.lang.Object)> ==> <java.lang.Character: int compareTo(java.lang.Character)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Long: void <init>(long)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: void <init>(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Long: void <init>(java.lang.String)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: byte byteValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: int compareTo(java.lang.Long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long decode(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: double doubleValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: float floatValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long getLong(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long getLong(java.lang.String,long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: int intValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long longValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long parseLong(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long parseLong(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: short shortValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.String toBinaryString(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.String toHexString(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.String toOctalString(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.String toString(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.String toString(long,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long highestOneBit(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long lowestOneBit(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: int numberOfLeadingZeros(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: int numberOfTrailingZeros(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: int bitCount(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long rotateLeft(long,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long rotateRight(long,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long reverseBytes(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: long reverse(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: int signum(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long valueOf(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Long: int compareTo(java.lang.Long)>($r2) in <java.lang.Long: int compareTo(java.lang.Object)> ==> <java.lang.Long: int compareTo(java.lang.Long)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Short: void <init>(java.lang.String)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Short: void <init>(short)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: void <init>(short)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: byte byteValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: int compareTo(java.lang.Short)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: java.lang.Short decode(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: double doubleValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: float floatValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: int intValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: long longValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: short parseShort(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: short parseShort(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: short shortValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: java.lang.String toString(short)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: java.lang.Short valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: java.lang.Short valueOf(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: short reverseBytes(short)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: java.lang.Short valueOf(short)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Short: int compareTo(java.lang.Short)>($r2) in <java.lang.Short: int compareTo(java.lang.Object)> ==> <java.lang.Short: int compareTo(java.lang.Short)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Boolean: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Boolean: void <init>(boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: void <init>(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: boolean booleanValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: int compareTo(java.lang.Boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: boolean getBoolean(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: boolean parseBoolean(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: java.lang.String toString(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: java.lang.Boolean valueOf(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Boolean: int compareTo(java.lang.Boolean)>($r2) in <java.lang.Boolean: int compareTo(java.lang.Object)> ==> <java.lang.Boolean: int compareTo(java.lang.Boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Byte: void <init>(byte)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: void <init>(byte)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Number: void <init>()>() in <java.lang.Byte: void <init>(java.lang.String)> ==> <java.lang.Number: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: byte byteValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: int compareTo(java.lang.Byte)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: java.lang.Byte decode(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: double doubleValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: float floatValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: int hashCode()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: int intValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: long longValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: byte parseByte(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: byte parseByte(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: short shortValue()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: java.lang.String toString(byte)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Byte: java.lang.Byte valueOf(byte)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<java.lang.Byte: int compareTo(java.lang.Byte)>($r2) in <java.lang.Byte: int compareTo(java.lang.Object)> ==> <java.lang.Byte: int compareTo(java.lang.Byte)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.NoClassDefFoundError: void <init>()> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NoClassDefFoundError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.NoClassDefFoundError: void <init>(java.lang.String)> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NoClassDefFoundError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.IndexOutOfBoundsException: void <init>()> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IndexOutOfBoundsException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.VirtualMachineError: void <init>()>() in <java.lang.StackOverflowError: void <init>()> ==> <java.lang.VirtualMachineError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StackOverflowError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.VirtualMachineError: void <init>()>() in <java.lang.StackOverflowError: void <init>(java.lang.String)> ==> <java.lang.VirtualMachineError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StackOverflowError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.AbstractMethodError: void <init>()> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AbstractMethodError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.AbstractMethodError: void <init>(java.lang.String)> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.AbstractMethodError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.IncompatibleClassChangeError: void <init>()> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IncompatibleClassChangeError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IncompatibleClassChangeError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.ClassCastException: void <init>()> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassCastException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.ClassCastException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassCastException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.VerifyError: void <init>()> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.VerifyError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.VerifyError: void <init>(java.lang.String)> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.VerifyError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.NoSuchFieldError: void <init>()> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NoSuchFieldError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.NoSuchFieldError: void <init>(java.lang.String)> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NoSuchFieldError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.IllegalMonitorStateException: void <init>()> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IllegalMonitorStateException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.IllegalMonitorStateException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IllegalMonitorStateException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.Runnable)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.Runnable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: int activeCount()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void checkAccess()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: int countStackFrames()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.Thread currentThread()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void destroy()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void dumpStack()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: int enumerate(java.lang.Thread[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.util.Map getAllStackTraces()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.ClassLoader getContextClassLoader()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: long getId()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.String getName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: int getPriority()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.Thread$State getState()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.ThreadGroup getThreadGroup()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void interrupt()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: boolean interrupted()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: boolean isAlive()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: boolean isDaemon()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: boolean isInterrupted()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void join()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void join(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void join(long,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void resume()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void run()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void setDaemon(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void setName(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void setPriority(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void sleep(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void sleep(long,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void start()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void stop()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void stop(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void suspend()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void yield()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: boolean holdsLock(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.VirtualMachineError: void <init>()>() in <java.lang.UnknownError: void <init>()> ==> <java.lang.VirtualMachineError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.UnknownError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.VirtualMachineError: void <init>()>() in <java.lang.UnknownError: void <init>(java.lang.String)> ==> <java.lang.VirtualMachineError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.UnknownError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.VirtualMachineError: void <init>()>() in <java.lang.InternalError: void <init>()> ==> <java.lang.VirtualMachineError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.InternalError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.VirtualMachineError: void <init>()>() in <java.lang.InternalError: void <init>(java.lang.String)> ==> <java.lang.VirtualMachineError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.InternalError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.ArithmeticException: void <init>()> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArithmeticException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.ArithmeticException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArithmeticException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.NegativeArraySizeException: void <init>()> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NegativeArraySizeException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.NegativeArraySizeException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NegativeArraySizeException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.ClassCircularityError: void <init>()> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassCircularityError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.ClassCircularityError: void <init>(java.lang.String)> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ClassCircularityError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.NoSuchMethodError: void <init>()> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NoSuchMethodError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.NoSuchMethodError: void <init>(java.lang.String)> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.NoSuchMethodError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IndexOutOfBoundsException: void <init>()>() in <java.lang.ArrayIndexOutOfBoundsException: void <init>()> ==> <java.lang.IndexOutOfBoundsException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArrayIndexOutOfBoundsException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IndexOutOfBoundsException: void <init>()>() in <java.lang.ArrayIndexOutOfBoundsException: void <init>(int)> ==> <java.lang.IndexOutOfBoundsException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArrayIndexOutOfBoundsException: void <init>(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IndexOutOfBoundsException: void <init>()>() in <java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)> ==> <java.lang.IndexOutOfBoundsException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Error: void <init>()>() in <java.lang.ThreadDeath: void <init>()> ==> <java.lang.Error: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ThreadDeath: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.InstantiationError: void <init>()> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.InstantiationError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.InstantiationError: void <init>(java.lang.String)> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.InstantiationError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.IllegalAccessError: void <init>()> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IllegalAccessError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.IncompatibleClassChangeError: void <init>()>() in <java.lang.IllegalAccessError: void <init>(java.lang.String)> ==> <java.lang.IncompatibleClassChangeError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.IllegalAccessError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.UnsatisfiedLinkError: void <init>()> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.UnsatisfiedLinkError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.UnsatisfiedLinkError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.ArrayStoreException: void <init>()> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArrayStoreException: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.RuntimeException: void <init>()>() in <java.lang.ArrayStoreException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ArrayStoreException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.ExceptionInInitializerError: void <init>()> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ExceptionInInitializerError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.ExceptionInInitializerError: void <init>(java.lang.String)> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ExceptionInInitializerError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.LinkageError: void <init>()>() in <java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)> ==> <java.lang.LinkageError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ExceptionInInitializerError: java.lang.Throwable getException()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.VirtualMachineError: void <init>()>() in <java.lang.OutOfMemoryError: void <init>()> ==> <java.lang.VirtualMachineError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.OutOfMemoryError: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.VirtualMachineError: void <init>()>() in <java.lang.OutOfMemoryError: void <init>(java.lang.String)> ==> <java.lang.VirtualMachineError: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.OutOfMemoryError: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.stripe.exception.StripeException: void <init>(java.lang.String)>(r1) in <com.stripe.exception.APIConnectionException: void <init>(java.lang.String)> ==> <com.stripe.exception.StripeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2) in <com.stripe.exception.APIConnectionException: void <init>(java.lang.String,java.lang.Throwable)> ==> <com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, null) in <com.stripe.exception.StripeException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2) in <com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2) in <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)> ==> <com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.stripe.exception.StripeException: void <init>(java.lang.String)>(r1) in <com.stripe.exception.AuthenticationException: void <init>(java.lang.String)> ==> <com.stripe.exception.StripeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2) in <com.stripe.exception.CardException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)> ==> <com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2) in <com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)> ==> <com.stripe.exception.StripeException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.Card: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.stripe.model.StripeObject: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Object {") in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ") in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19) in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>() in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>() in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>() in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>() in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: r10 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>() in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
VIRTUAL edge: $r16 = virtualinvoke r14.<java.lang.reflect.Field: java.lang.String getName()>() in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.reflect.Field: java.lang.String getName()>
VIRTUAL edge: $r19 = virtualinvoke r14.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r3) in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.Object)>($r22) in <com.stripe.model.StripeObject: java.lang.String toString()> ==> <java.io.PrintStream: void println(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.Charge: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.stripe.model.Charge: com.stripe.model.Charge refund(java.util.Map)>(null) in <com.stripe.model.Charge: com.stripe.model.Charge refund()> ==> <com.stripe.model.Charge: com.stripe.model.Charge refund(java.util.Map)>
VIRTUAL edge: $r3 = virtualinvoke r1.<com.stripe.model.Charge: java.lang.String getId()>() in <com.stripe.model.Charge: com.stripe.model.Charge refund(java.util.Map)> ==> <com.stripe.model.Charge: java.lang.String getId()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.net.APIResource: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.ChargeCollection: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() in <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()> ==> <java.lang.Object: java.lang.Object clone()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() in <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()> ==> <java.util.Locale: java.lang.Object clone()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() in <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()> ==> <java.util.Date: java.lang.Object clone()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() in <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()> ==> <java.util.HashMap: java.lang.Object clone()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() in <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()> ==> <java.util.Hashtable: java.lang.Object clone()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() in <com.stripe.net.APIResource$RequestMethod: com.stripe.net.APIResource$RequestMethod[] values()> ==> <java.lang.Enum: java.lang.Object clone()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.stripe.net.StripeResponse: void <init>(int,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.stripe.util.Base64: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2) in <com.stripe.util.Base64: java.lang.String encodeToString(byte[],boolean)> ==> <java.lang.String: void <init>(char[])>
VIRTUAL edge: $i25 = virtualinvoke r0.<java.lang.String: int length()>() in <com.stripe.util.Base64: byte[] decode(java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i27) in <com.stripe.util.Base64: byte[] decode(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i29) in <com.stripe.util.Base64: byte[] decode(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i29) in <com.stripe.util.Base64: byte[] decode(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i14) in <com.stripe.util.Base64: byte[] decode(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: i0 = virtualinvoke r0.<java.lang.String: int length()>() in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $c45 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i48) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c42 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i49) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i49) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c41 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i40) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c39 = virtualinvoke r0.<java.lang.String: char charAt(int)>(76) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i48) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i57) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c27 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i58) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c31 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i59) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
VIRTUAL edge: $c15 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i14) in <com.stripe.util.Base64: byte[] decodeFast(java.lang.String)> ==> <java.lang.String: char charAt(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.stripe.Stripe: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.stripe.model.EventDataDeserializer: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.stripe.model.EventData: void <init>()>() in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <com.stripe.model.EventData: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.stripe.model.EventData: void setPreviousAttributes(java.util.Map)>($r28) in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <com.stripe.model.EventData: void setPreviousAttributes(java.util.Map)>
VIRTUAL edge: virtualinvoke $r0.<com.stripe.model.EventData: void setObject(com.stripe.model.StripeObject)>(r23) in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <com.stripe.model.EventData: void setObject(com.stripe.model.StripeObject)>
INTERFACE edge: $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <java.util.Scanner: boolean hasNext()>
INTERFACE edge: $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <java.util.Scanner: java.lang.Object next()>
VIRTUAL edge: $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r9) in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r24.<com.stripe.model.EventDataDeserializer$1: void <init>(com.stripe.model.EventDataDeserializer)>(r25) in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <com.stripe.model.EventDataDeserializer$1: void <init>(com.stripe.model.EventDataDeserializer)>
VIRTUAL edge: $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r9) in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <java.lang.String: boolean equals(java.lang.Object)>
INTERFACE edge: $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32) in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
INTERFACE edge: $r17 = interfaceinvoke $r16.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32) in <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <java.util.HashMap: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>(r1, r2, r3) in <com.stripe.model.EventDataDeserializer: java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)> ==> <com.stripe.model.EventDataDeserializer: com.stripe.model.EventData deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.EventData: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.Coupon: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.CouponCollection: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.DeletedCoupon: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.Customer: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.stripe.model.Customer: com.stripe.model.Subscription cancelSubscription(java.util.Map)>(null) in <com.stripe.model.Customer: com.stripe.model.Subscription cancelSubscription()> ==> <com.stripe.model.Customer: com.stripe.model.Subscription cancelSubscription(java.util.Map)>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.Discount: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.NextRecurringCharge: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.Subscription: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.CustomerCollection: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.DeletedCustomer: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.Plan: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.PlanCollection: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.DeletedPlan: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.DeletedInvoiceItem: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.Event: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.EventCollection: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.Invoice: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.InvoiceLines: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.InvoiceCollection: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.InvoiceItem: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.InvoiceItemCollection: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.InvoiceLineSubscription: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.model.StripeObject: void <init>()>() in <com.stripe.model.InvoiceLineSubscriptionPeriod: void <init>()> ==> <com.stripe.model.StripeObject: void <init>()>
SPECIAL edge: specialinvoke r0.<com.stripe.net.APIResource: void <init>()>() in <com.stripe.model.Token: void <init>()> ==> <com.stripe.net.APIResource: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.stripe.net.APIResource$RequestMethod: void <init>(java.lang.String,int)>("GET", 0) in <com.stripe.net.APIResource$RequestMethod: void <clinit>()> ==> <com.stripe.net.APIResource$RequestMethod: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r1.<com.stripe.net.APIResource$RequestMethod: void <init>(java.lang.String,int)>("POST", 1) in <com.stripe.net.APIResource$RequestMethod: void <clinit>()> ==> <com.stripe.net.APIResource$RequestMethod: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r2.<com.stripe.net.APIResource$RequestMethod: void <init>(java.lang.String,int)>("DELETE", 2) in <com.stripe.net.APIResource$RequestMethod: void <clinit>()> ==> <com.stripe.net.APIResource$RequestMethod: void <init>(java.lang.String,int)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>() in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <java.lang.String: boolean isEmpty()>
SPECIAL edge: specialinvoke $r1.<com.stripe.exception.AuthenticationException: void <init>(java.lang.String)>("No API key provided. (HINT: set your API key using \'Stripe.apiKey = <API-KEY>\'. You can generate API keys from the Stripe web interface. See https://stripe.com/api for details or email support@stripe.com if you have questions.") in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <com.stripe.exception.AuthenticationException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r10.<com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>("Unable to encode parameters to UTF-8. Please contact support@stripe.com for assistance.", null, $r9) in <com.stripe.net.APIResource: java.lang.Object request(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.util.Map,java.lang.Class)> ==> <com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>() in <com.stripe.util.Base64: void <clinit>()> ==> <java.lang.String: char[] toCharArray()>
SPECIAL edge: specialinvoke $r0.<com.google.gson.GsonBuilder: void <init>()>() in <com.stripe.net.APIResource: void <clinit>()> ==> <com.google.gson.GsonBuilder: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.stripe.model.EventDataDeserializer: void <init>()>() in <com.stripe.net.APIResource: void <clinit>()> ==> <com.stripe.model.EventDataDeserializer: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.util.HashMap: void <init>()>() in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: void <init>()>
INTERFACE edge: interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("charge", class "Lcom/stripe/model/Charge;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("charge", class "Lcom/stripe/model/Charge;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("discount", class "Lcom/stripe/model/Discount;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("discount", class "Lcom/stripe/model/Discount;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("customer", class "Lcom/stripe/model/Customer;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("customer", class "Lcom/stripe/model/Customer;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("invoice", class "Lcom/stripe/model/Invoice;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("invoice", class "Lcom/stripe/model/Invoice;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("invoiceitem", class "Lcom/stripe/model/InvoiceItem;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("invoiceitem", class "Lcom/stripe/model/InvoiceItem;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("plan", class "Lcom/stripe/model/Plan;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("plan", class "Lcom/stripe/model/Plan;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("subscription", class "Lcom/stripe/model/Subscription;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("subscription", class "Lcom/stripe/model/Subscription;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", class "Lcom/stripe/model/Token;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", class "Lcom/stripe/model/Token;") in <com.stripe.model.EventDataDeserializer: void <clinit>()> ==> <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
SPECIAL edge: specialinvoke $r14.<com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r16, $r15, null) in <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)> ==> <com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r5.<com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, $r6, null) in <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)> ==> <com.stripe.exception.InvalidRequestException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r12.<com.stripe.exception.AuthenticationException: void <init>(java.lang.String)>($r13) in <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)> ==> <com.stripe.exception.AuthenticationException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.stripe.exception.CardException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r11, $r10, $r9, null) in <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)> ==> <com.stripe.exception.CardException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r17.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>($r18, null) in <com.stripe.net.APIResource: void handleAPIError(java.lang.String,int)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r85) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.net.URL: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.stripe.net.APIResource$RequestMethod: java.lang.String name()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Enum: java.lang.String name()>
VIRTUAL edge: $r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r4) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
VIRTUAL edge: r6 = virtualinvoke $r5.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
VIRTUAL edge: $r9 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("validateCertificate", $r8) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r83 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("withDefaults", $r82) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: r87 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r10) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r81.<java.io.PrintStream: void println(java.lang.String)>("Warning: this App Engine SDK version does not allow verification of SSL certificates;this exposes you to a MITM attack. Please upgrade your App Engine SDK to >=1.5.0. If you have questions, contact support@stripe.com.") in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.io.PrintStream: void println(java.lang.String)>
VIRTUAL edge: r87 = virtualinvoke $r83.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r84) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $r12 = virtualinvoke r88.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setDeadline", $r11) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
SPECIAL edge: specialinvoke $r14.<java.lang.Double: void <init>(double)>(55.0) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Double: void <init>(double)>
VIRTUAL edge: virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r87, $r13) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $r17 = virtualinvoke r15.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r16) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
VIRTUAL edge: $r55 = virtualinvoke r15.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setPayload", $r54) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r52 = virtualinvoke r15.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setHeader", $r51) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: r19 = virtualinvoke $r17.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r18) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>
VIRTUAL edge: $r58 = virtualinvoke r57.<java.lang.String: byte[] getBytes()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: byte[] getBytes()>
VIRTUAL edge: virtualinvoke $r55.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r19, $r56) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
INTERFACE edge: $r22 = interfaceinvoke $r21.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.util.HashMap: java.util.Set entrySet()>
INTERFACE edge: $r22 = interfaceinvoke $r21.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.util.Hashtable: java.util.Set entrySet()>
INTERFACE edge: $z0 = interfaceinvoke r89.<java.util.Iterator: boolean hasNext()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.util.Scanner: boolean hasNext()>
INTERFACE edge: $r45 = interfaceinvoke r89.<java.util.Iterator: java.lang.Object next()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.util.Scanner: java.lang.Object next()>
VIRTUAL edge: $r47 = virtualinvoke r91.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($r46) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
VIRTUAL edge: r92 = virtualinvoke $r47.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r48) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r52.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r19, $r53) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $r24 = virtualinvoke r93.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getURLFetchService", $r23) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: r94 = virtualinvoke $r24.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r25) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $r26 = virtualinvoke r94.<java.lang.Object: java.lang.Class getClass()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: r95 = virtualinvoke $r26.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("fetch", $r27) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: virtualinvoke r95.<java.lang.reflect.Method: void setAccessible(boolean)>(1) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: void setAccessible(boolean)>
VIRTUAL edge: r96 = virtualinvoke r95.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r94, $r28) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $r29 = virtualinvoke r96.<java.lang.Object: java.lang.Class getClass()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r36 = virtualinvoke r96.<java.lang.Object: java.lang.Class getClass()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r31 = virtualinvoke $r29.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getResponseCode", $r30) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r33 = virtualinvoke $r31.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r96, $r32) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
VIRTUAL edge: i0 = virtualinvoke $r34.<java.lang.Integer: int intValue()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Integer: int intValue()>
VIRTUAL edge: $r38 = virtualinvoke $r36.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getContent", $r37) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r40 = virtualinvoke $r38.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r96, $r39) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
SPECIAL edge: specialinvoke $r35.<java.lang.String: void <init>(byte[],java.lang.String)>($r42, "UTF-8") in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.String: void <init>(byte[],java.lang.String)>
SPECIAL edge: specialinvoke $r44.<com.stripe.net.StripeResponse: void <init>(int,java.lang.String)>(i0, $r35) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.StripeResponse: void <init>(int,java.lang.String)>
SPECIAL edge: specialinvoke $r79.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r78) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r77.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r76) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r75.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r74) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r73.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r72) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r71.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r70) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r69.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r68) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r67.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r66) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r65.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r64) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r63.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r62) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r61.<com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>("Sorry, an unknown error occurred while trying to use the Google App Engine runtime. Please contact support@stripe.com for assistance.", $r60) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeAppEngineRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIException: void <init>(java.lang.String,java.lang.Throwable)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.stripe.net.APIResource$RequestMethod: int ordinal()>() in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <java.lang.Enum: int ordinal()>
SPECIAL edge: specialinvoke $r7.<com.stripe.exception.APIConnectionException: void <init>(java.lang.String)>($r9) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIConnectionException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r18.<com.stripe.net.StripeResponse: void <init>(int,java.lang.String)>(i2, r17) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.net.StripeResponse: void <init>(int,java.lang.String)>
SPECIAL edge: specialinvoke $r13.<com.stripe.exception.APIConnectionException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r12) in <com.stripe.net.APIResource: com.stripe.net.StripeResponse makeURLConnectionRequest(com.stripe.net.APIResource$RequestMethod,java.lang.String,java.lang.String)> ==> <com.stripe.exception.APIConnectionException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuffer: void <init>()>() in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.lang.StringBuffer: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&") in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15) in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>() in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.lang.StringBuffer: int length()>
VIRTUAL edge: virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(0) in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>
VIRTUAL edge: $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>() in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.lang.StringBuffer: java.lang.String toString()>
INTERFACE edge: $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.util.HashMap: java.util.Set entrySet()>
INTERFACE edge: $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.util.Hashtable: java.util.Set entrySet()>
INTERFACE edge: $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.util.Scanner: boolean hasNext()>
INTERFACE edge: $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() in <com.stripe.net.APIResource: java.lang.String createQuery(java.util.Map)> ==> <java.util.Scanner: java.lang.Object next()>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>() in <com.stripe.net.APIResource: java.lang.String className(java.lang.Class)> ==> <java.lang.Class: java.lang.String getSimpleName()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>() in <com.stripe.net.APIResource: java.lang.String className(java.lang.Class)> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("$", "") in <com.stripe.net.APIResource: java.lang.String className(java.lang.Class)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r0.<java.util.HashMap: void <init>()>() in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: void <init>()>
INTERFACE edge: interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Charset", "UTF-8") in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("User-Agent", $r4) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Authorization", $r9) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("X-Stripe-Client-User-Agent", $r20) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
SPECIAL edge: specialinvoke $r13.<java.util.HashMap: void <init>()>() in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: void <init>()>
INTERFACE edge: interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, $r23) in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bindings.version", "1.0.11") in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lang", "Java") in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("publisher", "Stripe") in <com.stripe.net.APIResource: java.util.Map getHeaders()> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
VIRTUAL edge: $i1 = virtualinvoke $r2.<com.stripe.net.APIResource$RequestMethod: int ordinal()>() in <com.stripe.net.APIResource$1: void <clinit>()> ==> <java.lang.Enum: int ordinal()>
VIRTUAL edge: $i2 = virtualinvoke $r4.<com.stripe.net.APIResource$RequestMethod: int ordinal()>() in <com.stripe.net.APIResource$1: void <clinit>()> ==> <java.lang.Enum: int ordinal()>
VIRTUAL edge: $i3 = virtualinvoke $r6.<com.stripe.net.APIResource$RequestMethod: int ordinal()>() in <com.stripe.net.APIResource$1: void <clinit>()> ==> <java.lang.Enum: int ordinal()>
SPECIAL edge: specialinvoke $r0.<java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF-8") in <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)> ==> <java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("\\A") in <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)> ==> <java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>
VIRTUAL edge: r3 = virtualinvoke $r2.<java.util.Scanner: java.lang.String next()>() in <com.stripe.net.APIResource: java.lang.String getResponseBody(java.io.InputStream)> ==> <java.util.Scanner: java.lang.String next()>
VIRTUAL edge: $r5 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.lang.String: byte[] getBytes(java.lang.String)>
VIRTUAL edge: virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r5) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.io.OutputStream: void write(byte[])>
VIRTUAL edge: virtualinvoke r8.<java.io.OutputStream: void close()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.io.OutputStream: void close()>
VIRTUAL edge: virtualinvoke r8.<java.io.OutputStream: void close()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.io.PrintStream: void close()>
VIRTUAL edge: virtualinvoke r8.<java.io.OutputStream: void close()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.io.FilterOutputStream: void close()>
VIRTUAL edge: virtualinvoke r8.<java.io.OutputStream: void close()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.io.OutputStream: void close()>
VIRTUAL edge: virtualinvoke r8.<java.io.OutputStream: void close()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.io.PrintStream: void close()>
VIRTUAL edge: virtualinvoke r8.<java.io.OutputStream: void close()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createPostConnection(java.lang.String,java.lang.String)> ==> <java.io.FilterOutputStream: void close()>
SPECIAL edge: specialinvoke $r25.<java.util.HashMap: void <init>()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.HashMap: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.util.HashMap: void <init>()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.HashMap: void <init>()>
INTERFACE edge: interfaceinvoke $r1.<java.util.Map: void putAll(java.util.Map)>($r17) in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.HashMap: void putAll(java.util.Map)>
INTERFACE edge: interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r10) in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: $r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.HashMap: java.util.Set entrySet()>
INTERFACE edge: $r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Hashtable: java.util.Set entrySet()>
INTERFACE edge: $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Scanner: boolean hasNext()>
INTERFACE edge: $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Scanner: java.lang.Object next()>
SPECIAL edge: specialinvoke $r12.<java.util.HashMap: void <init>()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.HashMap: void <init>()>
INTERFACE edge: interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, $r23) in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
INTERFACE edge: $r15 = interfaceinvoke r14.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.HashMap: java.util.Set entrySet()>
INTERFACE edge: $r15 = interfaceinvoke r14.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Hashtable: java.util.Set entrySet()>
INTERFACE edge: $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Scanner: boolean hasNext()>
INTERFACE edge: $r18 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Scanner: java.lang.Object next()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Float: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Throwable: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Object: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <com.stripe.model.StripeObject: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.ThreadGroup: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Integer: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.net.InetAddress: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.net.ServerSocket: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.math.BigDecimal: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Character: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.net.Proxy: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Long: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Thread: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.math.BigInteger: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.math.MathContext: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.net.NetworkInterface: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.nio.ByteOrder: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.StringBuilder: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Double: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.reflect.Constructor: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.StringBuffer: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.StackTraceElement: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.String: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Hashtable: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.reflect.Field: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.io.File: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Enum: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Date: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.net.URL: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Scanner: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Character$Subset: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.Locale: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Short: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.net.URI: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Byte: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.reflect.Method: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.regex.Pattern: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.net.Socket: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.util.AbstractMap: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.security.CodeSigner: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.nio.charset.CoderResult: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.nio.charset.CodingErrorAction: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Boolean: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Package: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.io.FileDescriptor: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.lang.Class: java.lang.String toString()>
VIRTUAL edge: $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>() in <com.stripe.net.APIResource: java.util.Map flattenParams(java.util.Map)> ==> <java.security.Timestamp: java.lang.String toString()>
VIRTUAL edge: $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>() in <com.stripe.net.APIResource: java.lang.String base64(java.lang.String)> ==> <java.lang.String: byte[] getBytes()>
SPECIAL edge: specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>($r3) in <com.stripe.net.APIResource: java.lang.String base64(java.lang.String)> ==> <java.lang.String: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1) in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)> ==> <java.net.URL: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)> ==> <java.net.URL: java.net.URLConnection openConnection()>
INTERFACE edge: $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)> ==> <java.util.HashMap: java.util.Set entrySet()>
INTERFACE edge: $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)> ==> <java.util.Hashtable: java.util.Set entrySet()>
INTERFACE edge: $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)> ==> <java.util.Scanner: boolean hasNext()>
INTERFACE edge: $r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() in <com.stripe.net.APIResource: javax.net.ssl.HttpsURLConnection createStripeConnection(java.lang.String)> ==> <java.util.Scanner: java.lang.Object next()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: java.lang.Object clone()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: java.lang.Object clone()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.google.gson.reflect.TypeToken: void <init>()>() in <com.stripe.model.EventDataDeserializer$1: void <init>(com.stripe.model.EventDataDeserializer)> ==> <com.google.gson.reflect.TypeToken: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0) in <com.stripe.net.APIResource$RequestMethod: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
FINALIZE edge: null in <java.lang.Enum: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Enum: void <init>(java.lang.String,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: void <init>(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
