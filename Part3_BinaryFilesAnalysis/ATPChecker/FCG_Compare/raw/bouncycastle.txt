CLINIT edge: $r1 = <java.lang.System: java.io.PrintStream out> in <org.bouncycastle.LICENSE: void main(java.lang.String[])> ==> <java.lang.System: void <clinit>()>
CLINIT edge: $r0 = <org.bouncycastle.LICENSE: java.lang.String licenseText> in <org.bouncycastle.LICENSE: void main(java.lang.String[])> ==> <org.bouncycastle.LICENSE: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: void <clinit>()>
STATIC edge: $r44 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r41 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r38 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r35 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r32 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r29 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r27 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r24 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r21 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r16 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.System: java.lang.String getProperty(java.lang.String)>
CLINIT edge: <org.bouncycastle.LICENSE: java.lang.String licenseText> = $r47 in <org.bouncycastle.LICENSE: void <clinit>()> ==> <org.bouncycastle.LICENSE: void <clinit>()>
VIRTUAL edge: virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r0) in <org.bouncycastle.LICENSE: void main(java.lang.String[])> ==> <java.io.PrintStream: void println(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copyright (c) 2000-2008 The Legion Of The Bouncy Castle (http://www.bouncycastle.org) ") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission is hereby granted, free of charge, to any person obtaining a copy of this software ") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and associated documentation files (the \"Software\"), to deal in the Software without restriction, ") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, ") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subject to the following conditions:") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The above copyright notice and this permission notice shall be included in all copies or substantial") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("portions of the Software.") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DEALINGS IN THE SOFTWARE.") in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
VIRTUAL edge: $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>() in <org.bouncycastle.LICENSE: void <clinit>()> ==> <java.lang.StringBuilder: java.lang.String toString()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
FINALIZE edge: null in <java.lang.Object: void <init>()> ==> <java.lang.Object: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>()> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Exception: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Throwable: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
